@startuml
title Структура редактора приложений


class "Application" as Application {
    site : Site
    run()
    createSite()
}
Application *-r- Site

class "Site" as Site {
    - _id : string
    - name : string
    - domaine : string
    - startPage_id : string
    - pages : Pages
    + updateName()
    + updateDomaine()
    + updateStartPage_id()
    + render()
}
Site *-- Pages

class "Pages" as Pages {
    - pageNames : String[]
    + constructor( site_id : string )
    - findPageNamesBySite_id( site_id : string )
    + create()
    + selectPage()
    + find( name : string )
    + delete( page : Page )
}
Pages *-r- Page


class "Page" as Page {
    - title : Text
    - styles : Styles
    - elements : Elements
    + render()
}
Page  --|> Element
Page *-r- Elements
Page *-r- Text
Page *-u- Styles

class "Elements" as Elements {
    - elements : Element[]
    + constructor( parent_id : string )
    - findElementsByParent_id( parent_id : string )
    + create()
    + selectElement()
    + delete( element : Element )
    + render()
}
Elements o-- Table


class "Element" as Element {
    - _id : string    
    - parent_id : string
    - styleName : string
    + baseRender()
}

class "Table" as Table {
    - title : Text
    - form : Form
    - instances : Instances
    + render()
}
Table *-- Text
Table *-- Form
Table *-- Instances
Table --|> Element


class "Form" as Form {
    - title : Text
    - inputs : NamedInputs
    - submit : Button
    + render()
}
Form *-- Button
Form *-- NamedInputs
Form *-- Text
Form  --|> Element

class "NamedInput" as NamedInputs {
    - namedInputs : NamedInput[]
    + constructor( parent_id : string )
    - findNamedInputsByParent_id( parent_id : string )
    + create()   
    + delete( namedInput : NamedInput )
    + render()
}
NamedInputs *-- NamedInput


class "NamedInput" as NamedInput {
    - index : number
    - title : Text
    - input : Input
    + render()
}
NamedInput  --|> Element
NamedInput *-- Input
NamedInput *-- Text

class "Input" as Input {
    - type : string
    - value : string 
    + getValue()  
    + render()
}
Input  --|> Element

class "Button" as Button {  
    - title : Text
    + onClick()
    + render()
}
Button *-- Text
Button  --|> Element


class "Text" as Text {
    - text : string
    + changeText()
    + render()
}
Text --|> Element

class "Instances" as Instances {
    - instances : Instance[]
    + constructor( parent_id : string )
    - findInstancesByTable_id( parent_id : string )
    + create()
    + delete( instance : Instance )
    + render()
}
Instances *-- Instance

class "Instance" as Instance {  
    - title : Text
    - namedText : NamedText    
    + render()
}
Instance  --|> Element
Instance *-- Text
Instance *-- NamedTexts
class "NamedTexts" as NamedTexts {
    - namedTexts : NamedText[]
    + constructor( parent_id : string )
    - findNamedTextsByParent_id( parent_id : string ) 
    + render()
}
NamedTexts *-- NamedText

class "NamedText" as NamedText {
    - index : number
    - title : Text
    - text : Text
    + render()
}
NamedText  --|> Element
NamedText *-- Text
@enduml