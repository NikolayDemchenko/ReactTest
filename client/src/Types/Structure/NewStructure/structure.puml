@startuml
title Структура дерева данных


interface "IData" as IData{    
    setData() 
    getData()
}
interface "IRender" as IRender{ 
    render()  
}

' Компонент
class "MyComponent" as MyComponent{
    _id:string
    tag:string
    props:MyObject  
    setData( tag:string , props: MyObject )
    getData()
    
}
MyComponent *-- MyObject
MyComponent ..|> IData


' Объект
class "MyObject" as MyObject{

    object:{ [ key: string ] :any }
    addProperty(  key: string , value :any )
    removeProperty(  key: string )    
}
MyObject ..|> IData

' Текст
class "MyText" as MyText{
    component:MyComponent
    text: string
    setData( text: string )
}
MyText ..|> IData
MyText ..|> IRender
MyText *-- MyComponent

' Переменная
class "MyVariable" as MyVariable{
    component:MyComponent
    name: MyText
    value: MyText | MyArray
    setData( name: MyText, value: MyText | MyArray )
}
MyVariable *-- MyText
MyVariable ..|> IData
MyVariable ..|> IRender
MyVariable *-- MyComponent

' Массив
class "MyArray" as MyArray{
    component:MyComponent
array: { MyText | MyVariable | MyArray}[]
setData( array: { MyText | MyVariable | MyArray}[] )
add( element: MyText | MyVariable | MyArray)
remove( element: MyText | MyVariable | MyArray)
}
MyArray ..|> IData
MyArray ..|> IRender
MyArray o-- MyArray
MyArray o-l- MyVariable
MyArray o-- MyText
MyArray *-- MyComponent

@enduml